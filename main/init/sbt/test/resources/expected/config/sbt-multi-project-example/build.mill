package build

import mill._
import mill.javalib._
import mill.javalib.publish._
import mill.scalalib.SbtModule

object Deps {

  val `ch.qos.logback:logback-classic` =
    ivy"ch.qos.logback:logback-classic:1.2.3"

  val `com.github.julien-truffaut:monocle-core` =
    ivy"com.github.julien-truffaut:monocle-core::1.4.0"

  val `com.github.julien-truffaut:monocle-macro` =
    ivy"com.github.julien-truffaut:monocle-macro::1.4.0"

  val `com.github.pureconfig:pureconfig` =
    ivy"com.github.pureconfig:pureconfig::0.8.0"

  val `com.typesafe.akka:akka-stream` =
    ivy"com.typesafe.akka:akka-stream::2.5.6"

  val `com.typesafe.scala-logging:scala-logging` =
    ivy"com.typesafe.scala-logging:scala-logging::3.7.2"
  val `com.typesafe:config` = ivy"com.typesafe:config:1.3.1"

  val `net.logstash.logback:logstash-logback-encoder` =
    ivy"net.logstash.logback:logstash-logback-encoder:4.11"
  val `org.scalacheck:scalacheck` = ivy"org.scalacheck:scalacheck::1.13.5"
  val `org.scalatest:scalatest` = ivy"org.scalatest:scalatest::3.0.4"
  val `org.slf4j:jcl-over-slf4j` = ivy"org.slf4j:jcl-over-slf4j:1.7.25"
}

object `package` extends RootModule {

  def artifactName = "sbt-multi-project-example"

  def pomSettings = PomSettings(
    "sbt-multi-project-example",
    "com.pbassiner",
    "",
    Seq(),
    VersionControl(None, None, None, None),
    Seq()
  )

  object multi1 extends BaseModule {

    def ivyDeps = super.ivyDeps() ++ Agg(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.github.julien-truffaut:monocle-core`,
      Deps.`com.github.julien-truffaut:monocle-macro`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def pomSettings = PomSettings(
      "multi1",
      "com.pbassiner",
      "",
      Seq(),
      VersionControl(None, None, None, None),
      Seq()
    )

    object tests extends MavenTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Agg(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

    }
  }

  object multi2 extends BaseModule {

    def ivyDeps = super.ivyDeps() ++ Agg(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.github.pureconfig:pureconfig`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    def moduleDeps = super.moduleDeps ++ Seq(build.common)

    def pomSettings = PomSettings(
      "multi2",
      "com.pbassiner",
      "",
      Seq(),
      VersionControl(None, None, None, None),
      Seq()
    )

    object tests extends MavenTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Agg(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

    }
  }

  object common extends BaseModule {

    def ivyDeps = super.ivyDeps() ++ Agg(
      Deps.`ch.qos.logback:logback-classic`,
      Deps.`com.typesafe.akka:akka-stream`,
      Deps.`com.typesafe.scala-logging:scala-logging`,
      Deps.`com.typesafe:config`,
      Deps.`net.logstash.logback:logstash-logback-encoder`,
      Deps.`org.slf4j:jcl-over-slf4j`
    )

    def pomSettings = PomSettings(
      "common",
      "com.pbassiner",
      "",
      Seq(),
      VersionControl(None, None, None, None),
      Seq()
    )

    object tests extends MavenTests with TestModule.ScalaTest {

      def ivyDeps = super.ivyDeps() ++
        Agg(Deps.`org.scalacheck:scalacheck`, Deps.`org.scalatest:scalatest`)

    }
  }
}

trait BaseModule extends SbtModule with PublishModule {

  def scalaVersion = "2.12.3"

  def scalacOptions = super.scalacOptions() ++ Seq(
    "-unchecked",
    "-feature",
    "-language:existentials",
    "-language:higherKinds",
    "-language:implicitConversions",
    "-language:postfixOps",
    "-deprecation",
    "-encoding",
    "utf8"
  )

  def pomSettings = PomSettings(
    "",
    "com.pbassiner",
    "",
    Seq(),
    VersionControl(None, None, None, None),
    Seq()
  )

  def publishVersion = "0.1.0-SNAPSHOT"

  def repositoriesTask = Task.Anon {
    super.repositoriesTask() ++ Seq(
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/service/local/repositories/releases/content/"
      ),
      coursier.maven.MavenRepository(
        "https://oss.sonatype.org/content/repositories/snapshots"
      )
    )
  }

}
